"""
Module defining data models for FastAPI Requests and Responses.
"""

from pydantic import BaseModel, field_validator
from app.config import app_config


class ChatRequest(BaseModel):
    """Represents a chat request.

    Attributes:
        message (str): The user's message to be processed.
    """

    message: str

    @field_validator("message")
    def validate_message(message: str):
        """Validates the message for non-emptiness and character limit.

        Args:
            message (str): The message to validate.

        Raises:
            ValueError: If the message is empty or exceeds the character limit.

        Returns:
            str: The validated message.
        """
        message = message.strip()
        if not message:
            raise ValueError("Empty message.")
        if len(message) > app_config.message_character_limit:
            raise ValueError(
                f"Message exceeds character limit: {app_config.message_character_limit}"
            )
        return message


class ChatResponse(BaseModel):
    """Represents a chat response.

    Attributes:
        response (str): The response generated by the RAG service.
    """

    response: str
    # "history": list
